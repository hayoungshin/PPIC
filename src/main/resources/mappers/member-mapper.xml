<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResult" type="Member">
		<id column="user_no" property="userNo" />
		<result column ="user_name" property="userName" />
		<result column ="position" property="position" />
		<result column ="department" property="department" />
		<result column ="phone" property="phone" />
		<result column ="mail" property="mail" />
		<result column ="hire_date" property="hireDate" />
		<result column ="resign_date" property="resignDate" />
		<result column ="employee_no" property="employeeNo" />
		<result column ="user_id" property="userId" />
		<result column ="user_pwd" property="userPwd" />
		<result column ="address" property="address" />
		<result column ="birthday" property="birthday" />
		<result column ="profile_img" property="profileImg" />
		<result column ="status" property="status" />
		<result column ="authority_no" property="authorityNo" />
		<result column ="member_sign" property="memberSign" />
		<result column ="conn_sta" property="connSta" />
		<result column ="position_no" property="positionNo" />
		<result column ="department_no" property="departmentNo" />
	</resultMap>
	
	<resultMap id="departmentResult" type="Department">
		<id column="department_no" property="departmentNo" />
		<result column="department_name" property="departmentName" />

		<result column="mem_count" property="memCount" />
	</resultMap>
	
	<resultMap id="positionResult" type="Position">
		<id column="position_no" property="positionNo" />
		<result column="position_name" property="positionName" />
	</resultMap>

	<select id="selectListMember" resultMap="memberResult">
		select
		       user_no
		     , user_name
		     , phone
		     , mail
		     , to_char(hire_date, 'YYYY.MM.DD') as "HIRE_DATE"
		     , to_char(resign_date, 'YYYY.MM.DD') as "resign_date"
		     , employee_no
		     , position_name as "POSITION"
		     , department_name as "DEPARTMENT"
		     , profile_img
		     , status
		     , department_no
		  from member
		  join dept on (member.department = dept.department_no) 
		  join position on (member.position = position.position_no)
		  order
		 	by department_no, position_no
	</select>
	
	<select id="selectDeptList" resultMap="departmentResult">
		select
			   department_no
			 , department_name
		  from dept
	</select>
	
	<select id="selectMember" resultMap="memberResult">
		select
			   user_no
			 , user_id
		     , user_name
		     , phone
		     , mail
		     , employee_no
		     , position as "position_no"
		     , department as "department_no"
		     , position_name as "position"
		     , department_name as "department"
		     , profile_img
		     , address
		     , to_char(hire_date, 'YYYY.MM.DD') "hire_date"
		     , status
		  from member
		  join dept on (member.department = dept.department_no) 
		  join position on (member.position = position.position_no)
		 where status='Y'
		   and user_no = #{userNo}
	</select>
	
	<select id="selectMemberList" resultMap="memberResult">
		select
			   user_no
		     , user_name
		     , position_name as "POSITION"
		     , department_name as "DEPARTMENT"
		  from member
		  join dept on (member.department = dept.department_no) 
		  join position on (member.position = position.position_no)
		 where status='Y'
		 order
		 	by department_no, position_no
	</select>
	
	<select id="loginMember" resultMap="memberResult">
		select
			   user_no
		     , user_id
		     , user_pwd
		     , user_name
		     , mail
		     , phone
		     , address
		     , birthday
		     , position_name as "POSITION"
		     , department_name as "DEPARTMENT"
		     , department_no
		     , employee_no
		     , profile_img
		     , to_char(hire_date, 'YYYY.MM.DD') "hire_date"
		     , to_char(resign_date, 'YYYY.MM.DD') "resign_date"
		     , status
		     , authority_no
		     , conn_sta
		  from member
		  join dept on (member.department = dept.department_no)
		  join position on (member.position = position.position_no) 
		 where status = 'Y'
		   and user_id = #{userId}
		   and member_sign = 'Y'
	</select>
	
	<update id="updateProfileImg">
		update 
			   member
		   set profile_img = #{profileImg}
		 where user_id = #{userId}
	</update>
	
	<update id="updateMember">
		update
		       member
		   set user_name = #{userName}
		     , phone = #{phone}
		     , address = #{address}
		 where user_id = #{userId}
	</update>
	
	<select id="idCheck" resultType="_int">
		select
			   count(*)
		  from member
		 where user_id = #{checkId}
	</select>
	
	<select id="selectPositionList" resultMap="positionResult">
		select
			   position_no
			 , position_name
		  from position
	</select>
	
	<insert id="insertMember">
		insert
		  into member
		  (
		  	user_no
		  , user_id
		  , user_pwd
		  , user_name
		  , mail
		  , phone
		  , birthday
		  , position
		  , department
		  , employee_no
		  )
		values
		  (
		  	seq_memno.nextval
		  , #{userId}
		  , #{userPwd}
		  , #{userName}
		  , #{userId} || '@ppic.kr'
		  , #{phone}
		  , #{birthday}
		  , #{position}
		  , #{department}
		  , #{employeeNo}
		  )
	</insert>
	
	<select id="findId" resultType="string">
		select
			   user_id
		  from member
		 where user_name = #{ userName }
		   and employee_no = #{ employeeNo }
	</select>
	<update id="resetPwd">
		update
			   member
		   set user_pwd = #{ userPwd }
		 where user_no = #{ userNo }
	</update>
	
	<!-- 메일용 -->
	<select id="selectMemForMail" resultMap="memberResult">
		select
		       user_name
		     , mail
		     , department
		     , user_no
		  from member
		 where status = 'Y'
		   and member_sign = 'Y'
		 order
		    by user_name
	</select>
	
	<select id="selectAuthorityMemList" resultMap="memberResult">
		select
		       user_no
		  from member
		 where authority_no like '%' || #{authoNo} || '%'
		    or authority_no like '%' || 0 || '%'
	</select>
	
	<select id="selectMemCountForMail" resultMap="departmentResult">
		select d.department_no,
		       d.department_name,
		       (
		         select count(*)
		           from member m
		          where d.department_no = m.department
		       ) mem_count
		  from dept d
		 order
		    by d.department_no
	</select>
	
	<select id="selectLikeMemForMail" resultMap="memberResult">
		select like_user "user_no", user_name, mail
		  from address_like l
		 join member m on (m.user_no = l.like_user)
		 where l.user_no = #{userNo}
	</select>
	
	<update id="deleteMember" >
		update
			   member
		   set resign_date = sysdate
		     , status = 'N'
		 where user_no = #{ userNo }
	</update>
	
	<update id="detailUpdateMeber" >
		update 
			   member
		   set user_name = #{userName}
		     , department = #{department}
		     , position = #{position}
		     , phone = #{phone}
		     , address = #{address}
		 where user_no = #{userNo}
	</update>
	
	<select id="authMemberList" resultMap="memberResult" >
		select 
		      user_no
		    , user_name
		    , position_name as "POSITION"
			, department_name as "DEPARTMENT"
		    , authority_no
		  from member
		  join dept on (member.department = dept.department_no)
		  join position on (member.position = position.position_no) 
		  where authority_no is not null
	</select>
	
	<update id="authUpdate">
		update 
			   member
		   set authority_no = #{auth}
		 where user_no = #{userNo}
	</update>
</mapper>
