<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">

	<resultMap id="chatResult" type="Chat">
		<result column ="room_no" property="roomNo" />
		<result column ="room_name" property="roomName" />
		<result column ="notread_chat" property="notreadChat" />
		<result column ="chat_content" property="chatContent" />
		<result column ="send_date" property="sendDate" />
		<result column ="user_no" property="participantNo" />
		<result column ="user_name" property="participantName" />
		<result column ="profile_img" property="profileImg" />
		<result column ="group_count" property="groupCount" />
	</resultMap>
	
	<resultMap id="memberResult" type="Member">
		<id column="user_no" property="userNo" />
		<result column ="user_name" property="userName" />
		<result column ="position" property="position" />
		<result column ="department" property="department" />
		<result column ="phone" property="phone" />
		<result column ="mail" property="mail" />
		<result column ="profile_img" property="profileImg" />
		<result column ="conn_sta" property="connSta" />
		<result column ="chat_like" property="chatLike" />
	</resultMap>

	<update id="updateConn">
		update
		       member
		   set conn_sta = #{connSta}
		 where user_no = #{userNo}
 	</update>
 	
 	<select id="selectListMember" resultMap="memberResult">
		select
		       user_no
		     , user_name
		     , nvl(phone, '전화번호 없음') "phone"
		     , mail
		     , position_name as "position"
		     , department_name as "department"
		     , conn_sta
		     , profile_img
		     , (select like_date
                  from chat_like
                 where myuser_no = #{userNo}
                   and likeuser_no = user_no) "chat_like"
		  from member
		  join dept on (member.department = dept.department_no) 
		  join position on (member.position = position.position_no)
		 where status='Y'
	</select>
	
	<insert id="insertChatLike">
		insert
		  into chat_like
		  (
		    myuser_no
		  , likeuser_no
		  )
		  values
		  (
		    #{userNo}
		  , #{chatLike}
		  )
	</insert>
	
	<delete id="deleteChatLike">
		delete
		  from chat_like
		 where myuser_no = #{userNo}
		   and likeuser_no = #{chatLike}
	</delete>
	
	<select id="searchName" resultMap="memberResult">
		select
		       user_no
		     , user_name
		     , nvl(phone, '전화번호 없음') "phone"
		     , mail
		     , position_name as "position"
		     , department_name as "department"
		     , conn_sta
		     , profile_img
		     , (select like_date
                  from chat_like
                 where myuser_no = #{userNo}
                   and likeuser_no = user_no) "chat_like"
		  from member
		  join dept on (member.department = dept.department_no) 
		  join position on (member.position = position.position_no)
		 where status='Y'
		   and user_name like '%' || #{userName} || '%'
		   and user_no != #{userNo}
	</select>
	
	<select id="selectChatRoomList" resultMap="chatResult">
		select 
		       cr.room_no
		     , room_name
		     , group_count
		     , notread_chat
		     , chat_content
		     , to_char(send_date, 'YYYY.MM.DD PM HH:mm') "send_date"
		  from chatroom cr
		  join participant cp on(cr.room_no = cp.room_no)
		  left join chat c on(cr.last_chat = c.chat_no)
		 where cp.user_no = #{userNo}
		 order
		    by chat_no desc
	</select>
	
	<select id="selectChatMemList" resultMap="chatResult">
		select room_no
		     , m.user_no
		     , user_name
		     , profile_img
		  from member m
		  join participant p on(m.user_no = p.user_no)
		 where p.room_no in (select room_no
		                      from participant
		                     where user_no = #{userNo})
		   and p.user_no != #{userNo}
	</select>
	
</mapper>
