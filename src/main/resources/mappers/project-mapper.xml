<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="projectMapper">

<resultMap id="projectResult" type="Project">
	<id column="project_no" property="projectNo"/>
	<result column="project_manager" property="projectManager"/>
	<result column="project_name" property="projectName"/>
	<result column="start_date" property="startDate"/>
	<result column="end_date" property="endDate"/>
	<result column="detail" property="detail"/>
	<result column="create_date" property="createDate"/>
	<result column="modify_date" property="modifyDate"/>
	<result column="delete_status" property="deleteStatus"/>
	<collection property="projectParticipants" resultMap="proParticipantsResult"/>
</resultMap>

<resultMap id="proParticipantsResult" type="ProjectParticipant">
	<result column="project_no" property="projectNo"/>
	<result column="task_no" property="taskNo"/>
	<result column="department_name" property="departmentName"/>
	<result column="user_name" property="userName"/>
	<result column="pm_status" property="pmStatus"/>
	<result column="task_assign" property="taskAssign"/>
	<result column="position_name" property="positionName"/>
	<result column="profile_img" property="userImg"/>
	<result column="department_no" property="departmentNo"/>
</resultMap>

<resultMap id="taskResult" type="Task">
	<id column="task_no" property="taskNo"/>
	<result column="project_no" property="projectNo"/>
	<result column="assign_user" property="assignUser"/>
	<result column="task_name" property="taskName"/>
	<result column="task_content" property="taskContent"/>
	<result column="file_path" property="filePath"/>
	<result column="file_origin_name" property="originName"/>
	<result column="task_status" property="taskStatus"/>
	<result column="create_date" property="createDate"/>
	<result column="modify_date" property="modifyDate"/>
	<result column="delete_status" property="deleteStatus"/>
	<result column="profile_img" property="userImg"/>
	<result column="position_name" property="positionName"/>
	<result column="user_no" property="userNo"/>
</resultMap>

<select id="selectProjectList" resultMap="projectResult">
	select 	
		   project_no
		 , m.user_name "project_manager"
		 , project_name
		 , start_date
		 , end_date
		 , detail
		 , create_date
		 , modify_date
		 , d.department_name "department_name"
		 , ps.position_name "position_name"
      from project pj
      left join p_participant pp using (project_no)
      left join member m on (pj.project_manager = m.user_no)
      left join dept d on (m.department = d.department_no)
      left join position ps on (m.position = ps.position_no)
     where delete_status = 'N'
       and end_date >= sysdate
       and pp.user_no = #{userNo}
        or project_manager = #{userNo}
     order
        by create_date desc
</select>

<select id="selectProjectParticipants" resultMap="proParticipantsResult">
	select
	        project_no
	      , task_no
	      , d.department_name "department_name"
	      , m.user_name "user_name"
	      , ps.position_name "position_name"
	  from p_participant pp
	  join project p using (project_no)
	  left join member m using (user_no)
	  left join dept d using (department_no)
	  left join position ps on (m.position = ps.position_no)
	 where project_no = #{projectNo}
	   and pm_status = 'N'
</select>

<select id="selectTaskList" resultMap="taskResult">
	select
		   task_no
		 , user_name "assign_user"
		 , task_name
		 , task_content
		 , file_path
		 , file_origin_name
		 , task_status
		 , create_date
		 , modify_date
		 , profile_img
		 , position_name
		 , user_no
      from task t
      left join member m on (t.assign_user = m.user_no)
      left join position ps on (m.position = ps.position_no) 
     where project_no = #{projectNo}
       and delete_status = 'N'
</select>

<!-- <select id="selectTaskParticipants" parameterType="java.util.ArrayList" resultMap="proParticipantsResult">
	select
		   task_no
		 , department_name
		 , user_name
		 , profile_img
	  from p_participant p
	  join member using (user_no)
      join dept using (department_no)
      <where>
	      <foreach item="t" collection="list" open="task_no in (" separator="," close=")">
		 	 #{t.taskNo}
	      </foreach>
	      and task_assign = 'N'
      </where>
</select> -->

<select id="selectTaskParticipants" resultMap="proParticipantsResult">
	select
		   task_no
		 , department_name
		 , user_name
		 , profile_img
		 , position_name
	  from p_participant p
	  left join member m using (user_no)
      left join dept d using (department_no)
      left join position ps on (m.position = ps.position_no)
     where task_no = #{taskNo}
	   and task_assign = 'N'
</select>

<select id="selectCountTaskParticipants" resultType="_int">
	select
		   count(*)
	  from p_participant
	 where task_no = #{taskNo}
	   and task_assign = 'N'
</select>

<update id="updateTaskStatus">
	update task
	   set task_status = #{taskStatus}
	 where task_no = #{taskNo}
</update>

<select id="selectDeptList" resultMap="proParticipantsResult">
	select 
	       department "department_no"
	     , department_name
	  from p_participant pp
	  right join member m using (user_no)
	  right join dept d using (department_no)
	 where project_no = #{projectNo}
	   and not user_no = #{userNo}
     group by department, department_name
</select>

<select id="selectEmployeesList" resultMap="proParticipantsResult">
	select 
	       user_no
	     , user_name
	     , department "department_no"
	     , position_name
	  from p_participant pp
	  right join member m using (user_no)
	  right join dept d using (department_no)
	   left join position ps on (m.position = ps.position_no)
	 where project_no = #{projectNo}
	   and not user_no = #{userNo}
     group by user_no, user_name, department, position_name
</select>

</mapper>
